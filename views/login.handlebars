<div class="flex flex-col gap-y-2 w-full h-full items-center justify-center">
    <div class="relative gap-y-2 h-fit min-w-[275px]">
        <div class="bg-zinc-900/40 rounded-md pb-4 pt-1 border border-zinc-900">
            <div class="flex flex-col justify-center gap-y-2">
                <div class="text-center">
                    <h1 class="text-[24px] select-none">Sign-In</h1>
                </div>
                <hr class="mx-2" />
                <div class="flex flex-col px-4 gap-y-5">
                    <div class="flex flex-col gap-y-2">
                        <div class="flex flex-col gap-y-1">
                            <label class="text-[14px]">Username</label>
                            <input id="username" type="text" class="bg-zinc-900 rounded-sm p-1" autocomplete="off" spellcheck="false">
                        </div>

                        <div class="flex flex-col gap-y-1">   
                            <label for="password" class="text-[14px]">Password</label>
                            <input id="password" type="password" class="bg-zinc-700/20 rounded-sm p-1">
                        </div>
                    </div>

                    <div class="flex flex-col gap-y-4">
                        <button id="login-button" class="bg-zinc-950 rounded-sm py-1 hover:bg-zinc-950/60 transition-all">Login</button>
                        <hr class="mx-4" />
                        <div class="flex flex-col gap-y-1">
                            <button id="register-button" class="bg-zinc-950 rounded-sm py-1 hover:bg-zinc-950/60 transition-all">Sign Up</button>
                            <label class="text-[12px] select-none text-gray-200/60">Don't have an account yet?</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="flex flex-col w-full absolute top-[calc(100%+1rem)]">
            <div id="success-modal" class="opacity-0 bg-green-600 w-full rounded-sm text-center text-wrap transition-opacity"></div>
            <div id="error-modal" class="opacity-0 bg-red-600 w-full rounded-sm text-center text-wrap transition-opacity"></div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", async () => {
        const searchParams = new URLSearchParams(window.location.search);
        if (searchParams.has("created") && searchParams.get("created") === "true") {
            successModal("Account Created Successfully");
        }

        const username = document.getElementById("username");
        const password = document.getElementById("password");
        
        async function login() {
            if (!username.value) {
                errorModal("Username or Password Missing")
                return;
            }

            const response = await fetch("/api/auth/login", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify({
                    username: username.value,
                    password: password.value,
                }),
            });

            const data = await response.json();
            if (response.ok) {
                localStorage.setItem("access_token", data.access_token);
                
                if (data.user) {
                    localStorage.setItem("user", JSON.stringify(data.user));
                }

                window.location.href = "/";
            } else {
                errorModal(data.message);
            }
        };

        document.querySelector("#login-button").addEventListener("click", login);
        document.querySelector("#register-button").addEventListener("click", () => {
            window.location.href = "/register";
        });
    });

    let successModalTimeout = null;
    function successModal(message) {
        const successModalElement = document.getElementById("success-modal");
        successModalElement.textContent = message;

        if (successModalTimeout) {
            clearTimeout(successModalTimeout);
        }

        successModalElement.classList.add("opacity-100", "p-2");
        successModalTimeout = setTimeout(() => {
            successModalElement.classList.remove("opacity-100", "p-2");
            successModalElement.textContent = "";
        }, 3000);
    }

    let errorModalTimeout = null;
    function errorModal(message) {
        const errorModalElement = document.getElementById("error-modal");
        errorModalElement.textContent = message;

        if (errorModalTimeout) {
            clearTimeout(errorModalTimeout);
        }

        errorModalElement.classList.add("opacity-100", "p-2");
        errorModalTimeout = setTimeout(() => {
            errorModalElement.classList.remove("opacity-100", "p-2");
            errorModalElement.textContent = "";
        }, 3000);
    }
</script>